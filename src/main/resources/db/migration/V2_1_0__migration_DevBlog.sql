insert into user (email, is_moderator, name, password, reg_time) values('vasya@yandex.ru', '1', 'Vasya', 'privet', '2020-09-01');
insert into user (email, is_moderator, name, password, reg_time) values('petya@yandex.ru', '1', 'Petya', 'poka', '2020-09-01');
insert into post (is_active, moderation_status, text, time, title, view_count, moderator_id, user_id) values('1', 'ACCEPTED', '1. Introduction. This article describes key concepts of Flyway and how we can use this framework to continuously remodel our applications database schema reliably and easily. At the end, well present an example of managing an in-memory H2 database using a Maven Flyway plugin. Flyway updates a database from one version to a next using migrations. We can write migrations either in SQL with database-specific syntax or in Java for advanced database transformations. Migrations can either be versioned or repeatable. The former has a unique version and is applied exactly once. The latter does not have a version. Instead, they are (re-)applied every time their checksum changes.Within a single migration run, repeatable migrations are always applied last, after pending versioned migrations have been executed. Repeatable migrations are applied in order of their description. For a single migration, all statements are run within a single database transaction.In this article, we mainly focus on how we may use the Maven plugin to perform database migrations.', '2020-09-02 17:20:31', 'Database Migrations with Flyway', '1', '1', '1');
insert into post (is_active, moderation_status, text, time, title, view_count, moderator_id, user_id) values('1', 'ACCEPTED', '1. Overview. Spring Data provides many ways to define a query that we can execute. One of these is the @Query annotation. In this tutorial, well demonstrate how to use the @Query annotation in Spring Data JPA to execute both JPQL and native SQL queries. Well also show how to build a dynamic query when the @Query annotation is not enough.', '2020-09-02 19:20:31', 'Spring Data JPA @Query', '1', '1', '1');
insert into post_comments (text, time, post_id, user_id) values('cool', '2020-09-04 19:20:31', '1', '1');
insert into post_comments (text, time, post_id, user_id) values('good', '2020-09-04 19:30:31', '2', '1');
